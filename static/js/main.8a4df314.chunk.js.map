{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","img/meet.png","Header.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","collapsed","handleClick","setState","this","props","Card","className","Header","as","summary","Body","start","dateTime","timeZone","location","href","htmlLink","role","target","description","Button","variant","size","id","onClick","Component","EventList","events","Container","Row","Col","md","sm","map","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","e","updateNumberOfEvents","prop","xs","src","logo","alt","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","slice","currentLocation","newNumber","parseInt","errorText","getData","number","length","city","split","shift","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.8a4df314.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport './styles/Event.scss';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    event: {},\r\n    collapsed: true,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Card className=\"Event\">\r\n        <Card.Header className=\"summary\" as=\"h4\">{event.summary}</Card.Header>\r\n        <Card.Body className=\"event-body\">\r\n          <p className=\"start-date\">{event.start.dateTime} ({event.start.timeZone})</p>\r\n\r\n          <p className=\"location\">@{event.summary} | {event.location}</p>\r\n\r\n          {!collapsed &&\r\n            <div className={`extra-details ${this.state.collapsed ? \"hide\" : \"show\"}`}>\r\n              <br />\r\n              <h6 className=\"about\">About Event</h6>\r\n              <a href={event.htmlLink} role=\"noopener\" target=\"_blank\">\r\n                See deatails on Google calendar\r\n              </a>\r\n              <p className=\"event-description\">{event.description}</p>\r\n\r\n            </div>\r\n          }\r\n          <Button variant=\"light\" size=\"md\" id=\"eventButton\" className={`${collapsed ? \"show\" : \"hide\"}-details-btn`} onClick={this.handleClick}>\r\n            {collapsed ? \"show Details\" : \"Hide Details\"}\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from \"react\";\r\nimport Event from './Event';\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport './styles/EventList.scss';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <Container className=\"eventlist-container\">\r\n        <Row className=\"d-flex justify-content-center event-list\">\r\n          <Col md={10} sm={12}>\r\n            <ul className=\"EventList row\">\r\n              {events.map(event =>\r\n                <li key={event.id} className=\"col-xl-4 col-lg-4 col-md-8 col-sm-12\">\r\n                  <Event event={event} />\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from \"react\";\r\nimport { Row, Col, Container, Form } from \"react-bootstrap\";\r\nimport './styles/CitySearch.scss';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"CitySearch\">\r\n        <Row>\r\n          <Col>\r\n            <p>Choose your nearest city</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"city\"\r\n              placeholder=\"Search for a city\"\r\n              value={this.state.query}\r\n              onChange={this.handleInputChanged}\r\n              onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n            />\r\n            <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n              {this.state.suggestions.map((suggestion) => (\r\n                <li key={suggestion}\r\n                  onClick={() => this.handleItemClicked(suggestion)}>\r\n                  {suggestion}</li>\r\n              ))}\r\n              <li onClick={() => this.handleItemClicked('all')}>\r\n                <b>See all cities</b>\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport './styles/NumberOfEvents.scss';\r\n\r\nclass NumberOfEvents extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"NumberOfEvents\">\r\n        <Row>\r\n          <Col>\r\n            <p>Number of events to show:</p>\r\n            <input type=\"number\"\r\n              value={this.props.numberOfEvents}\r\n              className=\"number-of-events\"\r\n              onChange={(e) => this.props.updateNumberOfEvents(e)} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","export default __webpack_public_path__ + \"static/media/meet.85c3cf69.png\";","import React from \"react\";\r\nimport logo from \"./img/meet.png\";\r\nimport './styles/Header.scss';\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nfunction Header(prop) {\r\n  return (\r\n    <Container className=\"logo-container\">\r\n      <Row>\r\n        <Col />\r\n        <Col xs={6}>\r\n          <img src={logo} alt=\"Meet app logo\" className=\"logo\" />\r\n        </Col>\r\n        <Col />\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Header;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  }\r\n];\r\n\r\nexport { mockData };","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport { mockData } from \"./mock-data\";\r\nimport axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://j34cd6uik1.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://j34cd6uik1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://j34cd6uik1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};","import React, { Component } from 'react';\r\nimport './nprogress.css';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport Header from './Header';\r\nimport { extractLocations, getEvents } from './api';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      events: [],\r\n      locations: [],\r\n      numberOfEvents: 32,\r\n      currentLocation: 'all'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { numberOfEvents } = this.state;\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      this.setState({\r\n        events: events.slice(0, numberOfEvents),\r\n        locations: extractLocations(events)\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = async (location, numberOfEvents) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ?\r\n        events :\r\n        events.filter((event) => event.location === location);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: locationEvents.slice(0, this.state.numberOfEvents),\r\n          currentLocation: location,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateNumberOfEvents = async (e) => {\r\n    const newNumber = e.target.value ? parseInt(e.target.value) : 32;\r\n\r\n    if (newNumber < 1 || newNumber > 32) {\r\n      this.setState({\r\n        numberOfEvents: '32',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorText: \"\",\r\n        numberOfEvents: newNumber,\r\n      });\r\n      this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\r\n    }\r\n  };\r\n\r\n  getData = () => {\r\n    if (this.mounted) {\r\n      const { locations, events } = this.state;\r\n      const data = locations.map((location) => {\r\n        const number = events.filter((event) => event.location === location).length\r\n        const city = location.split(', ').shift();\r\n        return { city, number };\r\n      });\r\n      return data;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"app-container\">\r\n        <div className=\"App\">\r\n          <Row>\r\n            <Header />\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n            </Col>\r\n            <Col>\r\n              <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateNumberOfEvents={this.updateNumberOfEvents} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <EventList events={this.state.events} />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}